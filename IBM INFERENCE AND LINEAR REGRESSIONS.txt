install.packages("tidyverse")
library(tidyverse)
url <- "https://dax-cdn.cdn.appdomain.cloud/dax-airline/1.0.1/lax_to_jfk.tar.gz"
download.file(url, destfile = "lax_to_jfk.tar.gz")
untar("lax_to_jfk.tar.gz", tar = "internal")
sub_airline <- read_csv("lax_to_jfk/lax_to_jfk.csv",
                        col_types = cols(
                          'DivDistance'= col_number(),
                          'DivArrDelay'= col_number()
                        ))
head(sub_airline)
tail(sub_airline)
sub_airline %>%
  filter(Month == 1) %>%
  group_by(Reporting_Airline) %>%
  summarise(avg_carrier_delay =mean(CarrierDelay, na.rm = TRUE))

glimpse(sub_airline)


sub_airline %>%
  summarise(count = sum(is.na(CarrierDelay)))
map(sub_airline, ~sum(is.na(.)))
dim(sub_airline)

drop_na_cols <- sub_airline %>% select(-DivDistance, -DivArrDelay)
dim(drop_na_cols)
head(drop_na_cols)
drop_na_rows <- drop_na_cols %>% drop_na(CarrierDelay)
dim(drop_na_rows)
head(drop_na_rows)

replace_na <- drop_na_rows %>% replace_na(list(CarrierDelay = 0,
                                               WeatherDelay = 0,
                                               NASDelay = 0,
                                               SecurityDelay = 0,
                                               LateAircraftDelay = 0))
head(replace_na)

sub_airline %>%
  summarise_all(class)%>%
  gather(variable, class)


sub_airline %>%
  mutate(dummy = 1) %>%
  spread( key = Reporting_Airline, 
          value = dummy, fill = 0) %>%
  slice(1:5)


sub_airline %>%
  summarise_all(class)%>%
  gather(variable, class)

date_airline <- replace_na %>%
  separate(FlightDate, sep = "-", into = c("year", "month", "day"))
head(date_airline)

date_airline %>%
  select(year, month, day) %>%
  mutate_all(type.convert) %>%
  mutate_if(is.character, as.numeric)













ggplot(data = sub_airline, mapping = aes(x = ArrDelay)) + geom_histogram(bins = 100, color = "white", fill = "red")+ coord_cartesian(xlim = c(-73, 682))
binning <- sub_airline %>%
  mutate(quantile_rank = ntile(sub_airline$ArrDelay, 4))
head(binning)

ggplot(data = binning, mapping = aes(x = quantile_rank))+ geom_histogram(bins = 4, color = "white", fill = "red")



sub_airline %>%
  mutate(Reporting_Airline = factor(Reporting_Airline,
                                    labels = c("AA", "AS", "DL", "UA", "B6", "PA (1)", "HP", "TW", "VX"))) %>%
  ggplot(aes(Reporting_Airline)) +
  stat_count(width = 0.5) +
  labs(x = "Number of date points in each airline")



alaska_flight <- sub_airline %>%
  filter(Reporting_Airline == "AS") %>%
  filter(!is.na(DepDelay) & !is.na(ArrDelay)) %>%
  filter(DepDelay < 40)

ggplot(data = alaska_flight, mapping = aes(x = DepDelay, y = ArrDelay)) +
  geom_point() +
  ggtitle("Alaska Flight Departure Delay vs Arrival Delays")


str(sub_airline)

cor(sub_airline$DepDelayMinutes,
    sub_airline$ArrDelay)

ggplot(data = sub_airline, mapping = aes(x = DepDelayMinutes, y = ArrDelayMinutes)) +
  geom_point() +
  geom_smooth(method = "lm", na.rm = TRUE)

install.packages("tidymodels")
library(tidymodels)

flight_delays <- sub_airline %>%
  replace_na(list(CarrierDelay = 0,
                  WeatherDelay = 0,
                  NASDelay = 0, 
                  SecurityDelay = 0,
                  LateAircraftDelay = 0)) %>%
  select(c(ArrDelayMinutes, DepDelayMinutes, CarrierDelay, WeatherDelay, NASDelay, SecurityDelay, LateAircraftDelay, DayOfWeek, Month))



set.seed(1234)
flight_split <- initial_split(flight_delays)
train_data <- training(flight_split)
test_data <- testing(flight_split)

lm_spec <- linear_reg() %>%
  set_engine(engine = "lm")
lm_spec

train_fit <- lm_spec %>%
  fit(ArrDelayMinutes ~DepDelayMinutes, data = train_data)
train_fit

train_results <- train_fit %>%
  predict(new_data = train_data) %>%
  mutate( truth = train_data$ArrDelayMinutes)
head(train_results)

rmse(train_results, truth = truth,
     estimate = .pred)

test_results %>%
  mutate(train = "testing") %>%
  bind_rows(train_results %>% mutate(train = "training")) %>%
  ggplot(aes(truth, .pred)) +
  geom_abline(lty = 2, color = "orange",
              size = 1.5) +
  geom_point(color = '#006EA1',
             alpha = 0.5) +
  facet_wrap(~train) +
  labs(x = "Truth",
       y = "Predicted Arrivals Delays (min)")
